export function Logo(props: React.SVGAttributes<any>) {
	return (
		<svg width="70" height="70" viewBox="0 0 70 70" fill="none" {...props}>
			<path
				d="M55.552 10.7824C38.0293 -7.65475 -5.2359 8.0449 4.37654 43.3541C5.1309 46.1251 8.58862 46.8294 10.5964 44.7761L23.7125 31.3627C25.5672 29.4659 28.5804 29.3479 30.5779 31.0938L39.5531 38.9386C41.4016 40.5542 44.1496 40.5889 46.0382 39.0203L60.558 26.9613C62.6074 25.2592 65.7254 26.0145 66.3125 28.613C72.0311 53.922 40.9681 80.8186 14.2267 58.9424"
				stroke="currentColor"
				strokeWidth="6"
				strokeLinecap="round"
			/>
		</svg>
	);
}

// SOCIAL ICONS
export function IconLinkedin(props: React.SVGAttributes<any>) {
	return (
		<svg width="20" height="20" viewBox="0 0 15 15" fill="none" {...props}>
			<path
				d="M2 1C1.44772 1 1 1.44772 1 2V13C1 13.5523 1.44772 14 2 14H13C13.5523 14 14 13.5523 14 13V2C14 1.44772 13.5523 1 13 1H2ZM3.05 6H4.95V12H3.05V6ZM5.075 4.005C5.075 4.59871 4.59371 5.08 4 5.08C3.4063 5.08 2.925 4.59871 2.925 4.005C2.925 3.41129 3.4063 2.93 4 2.93C4.59371 2.93 5.075 3.41129 5.075 4.005ZM12 8.35713C12 6.55208 10.8334 5.85033 9.67449 5.85033C9.29502 5.83163 8.91721 5.91119 8.57874 6.08107C8.32172 6.21007 8.05265 6.50523 7.84516 7.01853H7.79179V6.00044H6V12.0047H7.90616V8.8112C7.8786 8.48413 7.98327 8.06142 8.19741 7.80987C8.41156 7.55832 8.71789 7.49825 8.95015 7.46774H9.02258C9.62874 7.46774 10.0786 7.84301 10.0786 8.78868V12.0047H11.9847L12 8.35713Z"
				fill="currentColor"
				fillRule="evenodd"
				clipRule="evenodd"
			></path>
		</svg>
	);
}

export function IconGithub(props: React.SVGAttributes<any>) {
	return (
		<svg width="20" height="20" viewBox="0 0 15 15" fill="none" {...props}>
			<path
				d="M7.49933 0.25C3.49635 0.25 0.25 3.49593 0.25 7.50024C0.25 10.703 2.32715 13.4206 5.2081 14.3797C5.57084 14.446 5.70302 14.2222 5.70302 14.0299C5.70302 13.8576 5.69679 13.4019 5.69323 12.797C3.67661 13.235 3.25112 11.825 3.25112 11.825C2.92132 10.9874 2.44599 10.7644 2.44599 10.7644C1.78773 10.3149 2.49584 10.3238 2.49584 10.3238C3.22353 10.375 3.60629 11.0711 3.60629 11.0711C4.25298 12.1788 5.30335 11.8588 5.71638 11.6732C5.78225 11.205 5.96962 10.8854 6.17658 10.7043C4.56675 10.5209 2.87415 9.89918 2.87415 7.12104C2.87415 6.32925 3.15677 5.68257 3.62053 5.17563C3.54576 4.99226 3.29697 4.25521 3.69174 3.25691C3.69174 3.25691 4.30015 3.06196 5.68522 3.99973C6.26337 3.83906 6.8838 3.75895 7.50022 3.75583C8.1162 3.75895 8.73619 3.83906 9.31523 3.99973C10.6994 3.06196 11.3069 3.25691 11.3069 3.25691C11.7026 4.25521 11.4538 4.99226 11.3795 5.17563C11.8441 5.68257 12.1245 6.32925 12.1245 7.12104C12.1245 9.9063 10.4292 10.5192 8.81452 10.6985C9.07444 10.9224 9.30633 11.3648 9.30633 12.0413C9.30633 13.0102 9.29742 13.7922 9.29742 14.0299C9.29742 14.2239 9.42828 14.4496 9.79591 14.3788C12.6746 13.4179 14.75 10.7025 14.75 7.50024C14.75 3.49593 11.5036 0.25 7.49933 0.25Z"
				fill="currentColor"
				fillRule="evenodd"
				clipRule="evenodd"
			></path>
		</svg>
	);
}

export function IconInstagram(props: React.SVGAttributes<any>) {
	return (
		<svg width="20" height="20" viewBox="0 0 15 15" fill="none" {...props}>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M12.9091 12.909C13.2365 12.5817 13.4918 12.1895 13.6588 11.7577C13.8195 11.3443 13.9294 10.8718 13.961 10.1799C13.9926 9.48665 14.0001 9.26529 14.0001 7.50001C14.0001 5.73473 13.9926 5.51328 13.961 4.82008C13.9294 4.12821 13.8195 3.65573 13.6588 3.24228C13.4956 2.80857 13.2398 2.41567 12.9091 2.091C12.5844 1.76028 12.1915 1.50437 11.7578 1.34113C11.3443 1.18056 10.8718 1.0707 10.1799 1.03924C9.48675 1.00748 9.26537 1 7.50006 1C5.73476 1 5.51333 1.00748 4.82014 1.03912C4.12826 1.0707 3.65578 1.18056 3.24233 1.34125C2.80862 1.50447 2.41573 1.76032 2.09105 2.09098C1.76032 2.41563 1.5044 2.80852 1.34113 3.24225C1.18056 3.65573 1.0707 4.12821 1.03924 4.82008C1.00748 5.51328 1 5.73471 1 7.50001C1 9.26532 1.00748 9.48675 1.03924 10.1799C1.07083 10.8718 1.18069 11.3443 1.34138 11.7577C1.5046 12.1915 1.76045 12.5843 2.09111 12.909C2.41578 13.2397 2.80867 13.4955 3.24238 13.6587C3.65586 13.8194 4.12834 13.9293 4.82019 13.9609C5.51348 13.9925 5.73483 14 7.50012 14C9.2654 14 9.48685 13.9925 10.18 13.9609C10.8719 13.9293 11.3444 13.8194 11.7578 13.6587C12.1896 13.4917 12.5818 13.2364 12.9091 12.909ZM1.99949 6.73496C1.99974 6.94524 2.00005 7.19543 2.00005 7.50002C2.00005 7.80461 1.99974 8.0548 1.99949 8.26507C1.99849 9.08596 1.99824 9.29856 2.01963 9.7655C2.04625 10.3509 2.07823 10.7811 2.17588 11.1053C2.26976 11.417 2.37505 11.7342 2.7188 12.1171C3.06255 12.4999 3.39411 12.6733 3.81645 12.8007C4.23879 12.928 4.7696 12.9554 5.23052 12.9764C5.75332 13.0003 5.96052 13.0002 7.05714 12.9999L7.50006 12.9999C7.79304 12.9999 8.03569 13.0001 8.2409 13.0004C9.08195 13.0013 9.29425 13.0015 9.76575 12.9799C10.3512 12.9533 10.7814 12.9213 11.1056 12.8237C11.4173 12.7298 11.7345 12.6245 12.1173 12.2807C12.5001 11.937 12.6735 11.6054 12.8009 11.1831C12.9283 10.7607 12.9557 10.2299 12.9767 9.76902C13.0005 9.24689 13.0004 9.04027 13.0002 7.94749V7.94738L13.0001 7.50039L13.0001 7.05747C13.0004 5.96085 13.0005 5.75365 12.9766 5.23085C12.9556 4.76993 12.9282 4.23912 12.8009 3.81678C12.6735 3.39445 12.5001 3.06288 12.1173 2.71913C11.7345 2.37538 11.4172 2.27009 11.1056 2.17621C10.7813 2.07856 10.3511 2.04658 9.76571 2.01996C9.29421 1.99836 9.08194 1.99859 8.24092 1.99951H8.24092C8.0357 1.99974 7.79305 2.00001 7.50006 2.00001L7.05704 1.99993C5.96051 1.99964 5.75331 1.99958 5.23052 2.02343C4.7696 2.04446 4.23879 2.07183 3.81645 2.19921C3.39411 2.32659 3.06255 2.49999 2.7188 2.88281C2.37505 3.26562 2.26976 3.58286 2.17588 3.89453C2.07823 4.21874 2.04625 4.64894 2.01963 5.23437C1.99824 5.70131 1.99849 5.91401 1.99949 6.73496ZM7.49996 5.25015C6.25741 5.25015 5.25012 6.25744 5.25012 7.49999C5.25012 8.74254 6.25741 9.74983 7.49996 9.74983C8.74251 9.74983 9.7498 8.74254 9.7498 7.49999C9.7498 6.25744 8.74251 5.25015 7.49996 5.25015ZM4.25012 7.49999C4.25012 5.70515 5.70512 4.25015 7.49996 4.25015C9.2948 4.25015 10.7498 5.70515 10.7498 7.49999C10.7498 9.29483 9.2948 10.7498 7.49996 10.7498C5.70512 10.7498 4.25012 9.29483 4.25012 7.49999ZM10.9697 4.7803C11.3839 4.7803 11.7197 4.44452 11.7197 4.0303C11.7197 3.61609 11.3839 3.2803 10.9697 3.2803C10.5555 3.2803 10.2197 3.61609 10.2197 4.0303C10.2197 4.44452 10.5555 4.7803 10.9697 4.7803Z"
				fill="currentColor"
			></path>
		</svg>
	);
}

export function IconPerson(props: React.SVGAttributes<any>) {
	return (
		<svg width="20" height="20" viewBox="0 0 15 15" fill="none" {...props}>
			<path
				d="M7.5 0.875C5.49797 0.875 3.875 2.49797 3.875 4.5C3.875 6.15288 4.98124 7.54738 6.49373 7.98351C5.2997 8.12901 4.27557 8.55134 3.50407 9.31167C2.52216 10.2794 2.02502 11.72 2.02502 13.5999C2.02502 13.8623 2.23769 14.0749 2.50002 14.0749C2.76236 14.0749 2.97502 13.8623 2.97502 13.5999C2.97502 11.8799 3.42786 10.7206 4.17091 9.9883C4.91536 9.25463 6.02674 8.87499 7.49995 8.87499C8.97317 8.87499 10.0846 9.25463 10.8291 9.98831C11.5721 10.7206 12.025 11.8799 12.025 13.5999C12.025 13.8623 12.2376 14.0749 12.5 14.0749C12.7623 14.075 12.975 13.8623 12.975 13.6C12.975 11.72 12.4778 10.2794 11.4959 9.31166C10.7244 8.55135 9.70025 8.12903 8.50625 7.98352C10.0187 7.5474 11.125 6.15289 11.125 4.5C11.125 2.49797 9.50203 0.875 7.5 0.875ZM4.825 4.5C4.825 3.02264 6.02264 1.825 7.5 1.825C8.97736 1.825 10.175 3.02264 10.175 4.5C10.175 5.97736 8.97736 7.175 7.5 7.175C6.02264 7.175 4.825 5.97736 4.825 4.5Z"
				fill="currentColor"
				fillRule="evenodd"
				clipRule="evenodd"
			></path>
		</svg>
	);
}

export function IconEmail(props: React.SVGAttributes<any>) {
	return (
		<svg width="20" height="20" viewBox="0 0 15 15" fill="none" {...props}>
			<path
				d="M1 2C0.447715 2 0 2.44772 0 3V12C0 12.5523 0.447715 13 1 13H14C14.5523 13 15 12.5523 15 12V3C15 2.44772 14.5523 2 14 2H1ZM1 3L14 3V3.92494C13.9174 3.92486 13.8338 3.94751 13.7589 3.99505L7.5 7.96703L1.24112 3.99505C1.16621 3.94751 1.0826 3.92486 1 3.92494V3ZM1 4.90797V12H14V4.90797L7.74112 8.87995C7.59394 8.97335 7.40606 8.97335 7.25888 8.87995L1 4.90797Z"
				fill="currentColor"
				fillRule="evenodd"
				clipRule="evenodd"
			></path>
		</svg>
	);
}

// NAVIGATION ICONS
export function IconArrowUpRight(props: React.SVGAttributes<any>) {
	return (
		<svg
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
			{...props}
		>
			<path d="M7 7h10v10" />
			<path d="M7 17 17 7" />
		</svg>
	);
}

export function IconArrowRight(props: React.SVGAttributes<any>) {
	return (
		<svg fill="currentColor" width="18" height="18" viewBox="0 0 18 10" {...props}>
			<path
				className="transform origin-center scale-x-0 transition-transform group-hover:scale-100"
				d="M17.216 4.8L16.4 5.616H0V4H16.4186L17.216 4.8Z"
			></path>
			<path
				className="transform transition-transform group-hover:translate-x-[5px]"
				d="M13.008 4.976L8.03205 9.952H6.00005L10.1441 5.792L10.9761 4.96L10.1921 4.176L6.01605 0L8.04805 0L13.008 4.976Z"
			></path>
		</svg>
	);
}
export function IconArrow(props: React.SVGAttributes<any>) {
	return (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1em" height="1em" {...props}>
			<path
				fill="none"
				stroke="currentColor"
				strokeLinecap="round"
				strokeLinejoin="round"
				strokeWidth="1.5"
				d="M4 12h16m0 0l-6-6m6 6l-6 6"
			></path>
		</svg>
	);
}
export function IconBack(props: React.SVGAttributes<any>) {
	return (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1em" height="1em" {...props}>
			<path
				fill="currentColor"
				fillRule="evenodd"
				d="M4.5 6.25a.75.75 0 0 1 .75.75c0 1.756.715 2.78 1.563 3.391c.887.639 1.974.859 2.687.859h8.19l-3.72-3.72a.75.75 0 0 1 1.06-1.06l5 5a.75.75 0 0 1 0 1.06l-5 5a.75.75 0 1 1-1.06-1.06l3.72-3.72H9.5c-.953 0-2.367-.28-3.563-1.141C4.702 10.719 3.75 9.244 3.75 7a.75.75 0 0 1 .75-.75"
				clipRule="evenodd"
			></path>
		</svg>
	);
}

export function IconGlobe(props: React.SVGAttributes<any>) {
	return (
		<svg
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
			{...props}
		>
			<circle cx="12" cy="12" r="10" />
			<path d="M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20" />
			<path d="M2 12h20" />
		</svg>
	);
}
export function IconAt(props: React.SVGAttributes<any>) {
	return (
		<svg
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
			{...props}
		>
			<circle cx="12" cy="12" r="4" />
			<path d="M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-4 8" />
		</svg>
	);
}

export function IconMenu({
	isOpen,
	...props
}: { isOpen: boolean } & React.SVGAttributes<SVGElement>) {
	return (
		<svg width="18" height="18" viewBox="0 0 16 16" fill="currentColor" {...props}>
			<rect
				className={`origin-center transition-transform ease-out ${
					isOpen ? 'rotate-45' : '-translate-y-[3px]'
				}`}
				x="1"
				y="7.5"
				width="14"
				height="1.25"
				rx="0.5"
			></rect>
			<rect
				className={`origin-center transition-transform ease-out ${
					isOpen ? '-rotate-45' : 'translate-y-[3px]'
				}`}
				x="1"
				y="7.5"
				width="14"
				height="1.25"
				rx="0.5"
			></rect>
		</svg>
	);
}

export function IconCopy(props: React.SVGAttributes<any>) {
	return (
		<svg
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
			{...props}
		>
			<rect width="14" height="14" x="8" y="8" rx="2" ry="2" />
			<path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2" />
		</svg>
	);
}

export function IconHourglass(props: React.SVGAttributes<any>) {
	return (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
			{...props}
		>
			<path d="M5 22h14" />
			<path d="M5 2h14" />
			<path d="M17 22v-4.172a2 2 0 0 0-.586-1.414L12 12l-4.414 4.414A2 2 0 0 0 7 17.828V22" />
			<path d="M7 2v4.172a2 2 0 0 0 .586 1.414L12 12l4.414-4.414A2 2 0 0 0 17 6.172V2" />
		</svg>
	);
}
export function IconCalendar(props: React.SVGAttributes<any>) {
	return (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
			{...props}
		>
			<path d="M8 2v4" />
			<path d="M16 2v4" />
			<rect width="18" height="18" x="3" y="4" rx="2" />
			<path d="M3 10h18" />
		</svg>
	);
}

export const IconMoon = (props: React.SVGAttributes<any>) => {
	return (
		<svg viewBox="0 0 24 24" fill="currentColor" height="20" width="20" {...props}>
			<path fill="none" d="M0 0h24v24H0z" />
			<path d="M10 7a7 7 0 0012 4.9v.1c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2h.1A6.979 6.979 0 0010 7zm-6 5a8 8 0 0015.062 3.762A9 9 0 018.238 4.938 7.999 7.999 0 004 12z" />
		</svg>
	);
};
export function IconSun(props: React.SVGAttributes<any>) {
	return (
		<svg width="20" height="20" viewBox="0 0 15 15" fill="none" {...props}>
			<path
				d="M7.5 0C7.77614 0 8 0.223858 8 0.5V2.5C8 2.77614 7.77614 3 7.5 3C7.22386 3 7 2.77614 7 2.5V0.5C7 0.223858 7.22386 0 7.5 0ZM2.1967 2.1967C2.39196 2.00144 2.70854 2.00144 2.90381 2.1967L4.31802 3.61091C4.51328 3.80617 4.51328 4.12276 4.31802 4.31802C4.12276 4.51328 3.80617 4.51328 3.61091 4.31802L2.1967 2.90381C2.00144 2.70854 2.00144 2.39196 2.1967 2.1967ZM0.5 7C0.223858 7 0 7.22386 0 7.5C0 7.77614 0.223858 8 0.5 8H2.5C2.77614 8 3 7.77614 3 7.5C3 7.22386 2.77614 7 2.5 7H0.5ZM2.1967 12.8033C2.00144 12.608 2.00144 12.2915 2.1967 12.0962L3.61091 10.682C3.80617 10.4867 4.12276 10.4867 4.31802 10.682C4.51328 10.8772 4.51328 11.1938 4.31802 11.3891L2.90381 12.8033C2.70854 12.9986 2.39196 12.9986 2.1967 12.8033ZM12.5 7C12.2239 7 12 7.22386 12 7.5C12 7.77614 12.2239 8 12.5 8H14.5C14.7761 8 15 7.77614 15 7.5C15 7.22386 14.7761 7 14.5 7H12.5ZM10.682 4.31802C10.4867 4.12276 10.4867 3.80617 10.682 3.61091L12.0962 2.1967C12.2915 2.00144 12.608 2.00144 12.8033 2.1967C12.9986 2.39196 12.9986 2.70854 12.8033 2.90381L11.3891 4.31802C11.1938 4.51328 10.8772 4.51328 10.682 4.31802ZM8 12.5C8 12.2239 7.77614 12 7.5 12C7.22386 12 7 12.2239 7 12.5V14.5C7 14.7761 7.22386 15 7.5 15C7.77614 15 8 14.7761 8 14.5V12.5ZM10.682 10.682C10.8772 10.4867 11.1938 10.4867 11.3891 10.682L12.8033 12.0962C12.9986 12.2915 12.9986 12.608 12.8033 12.8033C12.608 12.9986 12.2915 12.9986 12.0962 12.8033L10.682 11.3891C10.4867 11.1938 10.4867 10.8772 10.682 10.682ZM5.5 7.5C5.5 6.39543 6.39543 5.5 7.5 5.5C8.60457 5.5 9.5 6.39543 9.5 7.5C9.5 8.60457 8.60457 9.5 7.5 9.5C6.39543 9.5 5.5 8.60457 5.5 7.5ZM7.5 4.5C5.84315 4.5 4.5 5.84315 4.5 7.5C4.5 9.15685 5.84315 10.5 7.5 10.5C9.15685 10.5 10.5 9.15685 10.5 7.5C10.5 5.84315 9.15685 4.5 7.5 4.5Z"
				fill="currentColor"
				fillRule="evenodd"
				clipRule="evenodd"
			></path>
		</svg>
	);
}

export function IconSearch(props: React.SVGAttributes<any>) {
	return (
		<svg fill="none" viewBox="0 0 15 15" height="20" width="20" {...props}>
			<path
				fill="currentColor"
				fillRule="evenodd"
				d="M10 6.5a3.5 3.5 0 11-7 0 3.5 3.5 0 017 0zm-.691 3.516a4.5 4.5 0 11.707-.707l2.838 2.837a.5.5 0 01-.708.708L9.31 10.016z"
				clipRule="evenodd"
			/>
		</svg>
	);
}

// CALLOUT ICONS
export function IconInfo(props: React.SVGAttributes<any>) {
	return (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
			{...props}
		>
			<circle cx="12" cy="12" r="10" />
			<path d="M12 16v-4" />
			<path d="M12 8h.01" />
		</svg>
	);
}
export function IconMessage(props: React.SVGAttributes<any>) {
	return (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
			{...props}
		>
			<path d="M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719" />
		</svg>
	);
}
export function IconCheck(props: React.SVGAttributes<any>) {
	return (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
			{...props}
		>
			<path d="M20 6 9 17l-5-5" />
		</svg>
	);
}
export function IconX(props: React.SVGAttributes<any>) {
	return (
		<svg fill="none" viewBox="0 0 15 15" height="20" width="20" {...props}>
			<path
				fill="currentColor"
				fillRule="evenodd"
				d="M11.782 4.032a.575.575 0 10-.813-.814L7.5 6.687 4.032 3.218a.575.575 0 00-.814.814L6.687 7.5l-3.469 3.468a.575.575 0 00.814.814L7.5 8.313l3.469 3.469a.575.575 0 00.813-.814L8.313 7.5l3.469-3.468z"
				clipRule="evenodd"
			/>
		</svg>
	);
}
export function IconWarning(props: React.SVGAttributes<any>) {
	return (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
			{...props}
		>
			<path d="m15 9-6 6" />
			<path d="M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z" />
			<path d="m9 9 6 6" />
		</svg>
	);
}

export function IconRSS(props: React.SVGAttributes<any>) {
	return (
		<svg
			width="16"
			height="16"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
			{...props}
		>
			<path d="M4 11a9 9 0 0 1 9 9" />
			<path d="M4 4a16 16 0 0 1 16 16" />
			<circle cx="5" cy="19" r="1" />
		</svg>
	);
}

export function IconComponent(props: React.SVGAttributes<any>) {
	return (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1em" height="1em" {...props}>
			<g fill="none" fillRule="evenodd">
				<path d="m12.594 23.258l-.012.002l-.071.035l-.02.004l-.014-.004l-.071-.036q-.016-.004-.024.006l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427q-.004-.016-.016-.018m.264-.113l-.014.002l-.184.093l-.01.01l-.003.011l.018.43l.005.012l.008.008l.201.092q.019.005.029-.008l.004-.014l-.034-.614q-.005-.019-.02-.022m-.715.002a.02.02 0 0 0-.027.006l-.006.014l-.034.614q.001.018.017.024l.015-.002l.201-.093l.01-.008l.003-.011l.018-.43l-.003-.012l-.01-.01z"></path>
				<path
					fill="currentColor"
					d="M10.94 2.454a1.5 1.5 0 0 1 2.12 0l2.83 2.828a1.5 1.5 0 0 1 0 2.122l-2.83 2.828a1.5 1.5 0 0 1-2.12 0L8.11 7.404a1.5 1.5 0 0 1 0-2.122zm5.656 5.657a1.5 1.5 0 0 1 2.122 0l2.828 2.828a1.5 1.5 0 0 1 0 2.122l-2.828 2.828a1.5 1.5 0 0 1-2.122 0l-2.828-2.828a1.5 1.5 0 0 1 0-2.122zm-11.314 0a1.5 1.5 0 0 1 2.122 0l2.828 2.828a1.5 1.5 0 0 1 0 2.122l-2.828 2.828a1.5 1.5 0 0 1-2.122 0l-2.828-2.828a1.5 1.5 0 0 1 0-2.122zm5.657 5.657a1.5 1.5 0 0 1 2.122 0l2.828 2.828a1.5 1.5 0 0 1 0 2.121l-2.828 2.829a1.5 1.5 0 0 1-2.122 0l-2.828-2.829a1.5 1.5 0 0 1 0-2.12z"
				></path>
			</g>
		</svg>
	);
}
export function IconGallery(props: React.SVGAttributes<any>) {
	return (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1em" height="1em" {...props}>
			<path fill="currentColor" d="M18 8a2 2 0 1 1-4 0a2 2 0 0 1 4 0"></path>
			<path
				fill="currentColor"
				fillRule="evenodd"
				d="M12.057 1.25h-.114c-2.309 0-4.118 0-5.53.19c-1.444.194-2.584.6-3.479 1.494c-.895.895-1.3 2.035-1.494 3.48c-.19 1.411-.19 3.22-.19 5.529v.114c0 2.309 0 4.118.19 5.53c.194 1.444.6 2.584 1.494 3.479c.895.895 2.035 1.3 3.48 1.494c1.411.19 3.22.19 5.529.19h.114c2.309 0 4.118 0 5.53-.19c1.444-.194 2.584-.6 3.479-1.494c.895-.895 1.3-2.035 1.494-3.48c.19-1.411.19-3.22.19-5.529v-.114c0-2.309 0-4.118-.19-5.53c-.194-1.444-.6-2.584-1.494-3.479c-.895-.895-2.035-1.3-3.48-1.494c-1.411-.19-3.22-.19-5.529-.19M3.995 3.995c.57-.57 1.34-.897 2.619-1.069c1.3-.174 3.008-.176 5.386-.176s4.086.002 5.386.176c1.279.172 2.05.5 2.62 1.069c.569.57.896 1.34 1.068 2.619c.174 1.3.176 3.008.176 5.386l-.001 1.28l-.222-.03c-2.844-.394-5.446 1.084-6.772 3.313c-1.71-4.325-6.227-7.275-11.274-6.55l-.226.032c.011-1.405.049-2.519.171-3.431c.172-1.279.5-2.05 1.069-2.62"
				clipRule="evenodd"
			></path>
		</svg>
	);
}
export function IconDesign(props: React.SVGAttributes<any>) {
	return (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1em" height="1em" {...props}>
			<path
				fill="currentColor"
				fillRule="evenodd"
				d="M10.847 21.934C5.867 21.362 2 17.133 2 12C2 6.477 6.477 2 12 2s10 4.477 10 10c0 5.157-3.283 4.733-6.086 4.37c-1.618-.209-3.075-.397-3.652.518c-.395.626.032 1.406.555 1.929a1.673 1.673 0 0 1 0 2.366c-.523.523-1.235.836-1.97.751M11.085 7a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0M6.5 13a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3m11 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3m-3-4.5a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3"
				clipRule="evenodd"
			></path>
		</svg>
	);
}
export function IconDocument(props: React.SVGAttributes<any>) {
	return (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1em" height="1em" {...props}>
			<path
				fill="currentColor"
				fillRule="evenodd"
				d="M4.172 3.172C3 4.343 3 6.229 3 10v4c0 3.771 0 5.657 1.172 6.828S7.229 22 11 22h2c3.771 0 5.657 0 6.828-1.172S21 17.771 21 14v-4c0-3.771 0-5.657-1.172-6.828S16.771 2 13 2h-2C7.229 2 5.343 2 4.172 3.172M7.25 8A.75.75 0 0 1 8 7.25h8a.75.75 0 0 1 0 1.5H8A.75.75 0 0 1 7.25 8m0 4a.75.75 0 0 1 .75-.75h8a.75.75 0 0 1 0 1.5H8a.75.75 0 0 1-.75-.75M8 15.25a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5z"
				clipRule="evenodd"
			></path>
		</svg>
	);
}
export function IconUser(props: React.SVGAttributes<any>) {
	return (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1em" height="1em" {...props}>
			<path
				fill="currentColor"
				fillRule="evenodd"
				d="M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2s10 4.477 10 10m-7-3a3 3 0 1 1-6 0a3 3 0 0 1 6 0m-3 11.5a8.46 8.46 0 0 0 4.807-1.489c.604-.415.862-1.205.51-1.848C16.59 15.83 15.09 15 12 15s-4.59.83-5.318 2.163c-.351.643-.093 1.433.511 1.848A8.46 8.46 0 0 0 12 20.5"
				clipRule="evenodd"
			></path>
		</svg>
	);
}
export function IconCode(props: React.SVGAttributes<any>) {
	return (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1em" height="1em" {...props}>
			<path
				fill="currentColor"
				fillRule="evenodd"
				d="M3.464 3.464C2 4.93 2 7.286 2 12s0 7.071 1.464 8.535C4.93 22 7.286 22 12 22s7.071 0 8.535-1.465C22 19.072 22 16.714 22 12s0-7.071-1.465-8.536C19.072 2 16.714 2 12 2S4.929 2 3.464 3.464m2.96 6.056a.75.75 0 0 1 1.056-.096l.277.23c.605.504 1.12.933 1.476 1.328c.379.42.674.901.674 1.518s-.295 1.099-.674 1.518c-.356.395-.871.824-1.476 1.328l-.277.23a.75.75 0 1 1-.96-1.152l.234-.195c.659-.55 1.09-.91 1.366-1.216c.262-.29.287-.427.287-.513s-.025-.222-.287-.513c-.277-.306-.707-.667-1.366-1.216l-.234-.195a.75.75 0 0 1-.096-1.056M17.75 15a.75.75 0 0 1-.75.75h-5a.75.75 0 0 1 0-1.5h5a.75.75 0 0 1 .75.75"
				clipRule="evenodd"
			></path>
		</svg>
	);
}

export function IconReact(props: React.SVGAttributes<any>) {
	return (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1em" height="1em" {...props}>
			<g fill="currentColor">
				<path d="M21.718 12c0-1.429-1.339-2.681-3.467-3.5c.029-.18.077-.37.1-.545c.217-2.058-.273-3.543-1.379-4.182c-1.235-.714-2.983-.186-4.751 1.239C10.45 3.589 8.7 3.061 7.468 3.773c-1.107.639-1.6 2.124-1.379 4.182c.018.175.067.365.095.545c-2.127.819-3.466 2.071-3.466 3.5s1.339 2.681 3.466 3.5c-.028.18-.077.37-.095.545c-.218 2.058.272 3.543 1.379 4.182c.376.213.803.322 1.235.316a6 6 0 0 0 3.514-1.56a6 6 0 0 0 3.515 1.56a2.44 2.44 0 0 0 1.236-.316c1.106-.639 1.6-2.124 1.379-4.182c-.019-.175-.067-.365-.1-.545c2.132-.819 3.471-2.071 3.471-3.5m-6.01-7.548a1.5 1.5 0 0 1 .76.187c.733.424 1.055 1.593.884 3.212c-.012.106-.043.222-.058.33q-1.263-.365-2.57-.523a16 16 0 0 0-1.747-1.972a4.9 4.9 0 0 1 2.731-1.234m-7.917 8.781c.172.34.335.68.529 1.017s.395.656.6.969a14 14 0 0 1-1.607-.376a14 14 0 0 1 .478-1.61m-.479-4.076a14 14 0 0 1 1.607-.376q-.308.468-.6.969c-.195.335-.357.677-.529 1.017q-.286-.79-.478-1.61M8.3 12a19 19 0 0 1 .888-1.75q.496-.852 1.076-1.65c.619-.061 1.27-.1 1.954-.1q1.025.001 1.952.1a20 20 0 0 1 1.079 1.654q.488.851.887 1.746a19 19 0 0 1-1.953 3.403a19.2 19.2 0 0 1-3.931 0a20 20 0 0 1-1.066-1.653A19 19 0 0 1 8.3 12m7.816 2.25c.2-.337.358-.677.53-1.017q.286.791.478 1.611a15 15 0 0 1-1.607.376c.202-.314.404-.635.597-.97zm.53-3.483c-.172-.34-.335-.68-.53-1.017a20 20 0 0 0-.6-.97q.814.142 1.606.376a14 14 0 0 1-.478 1.611zM12.217 6.34q.6.563 1.13 1.193q-.555-.031-1.129-.033c-.574-.002-.76.013-1.131.033q.53-.63 1.13-1.193m-4.249-1.7a1.5 1.5 0 0 1 .76-.187a4.9 4.9 0 0 1 2.729 1.233A16 16 0 0 0 9.71 7.658q-1.306.158-2.569.524c-.015-.109-.047-.225-.058-.331c-.171-1.619.151-2.787.885-3.211M3.718 12c0-.9.974-1.83 2.645-2.506c.218.857.504 1.695.856 2.506c-.352.811-.638 1.65-.856 2.506C4.692 13.83 3.718 12.9 3.718 12m4.25 7.361c-.734-.423-1.056-1.593-.885-3.212c.011-.106.043-.222.058-.331q1.262.365 2.564.524a16.4 16.4 0 0 0 1.757 1.982c-1.421 1.109-2.714 1.488-3.494 1.037m3.11-2.895q.56.033 1.14.034q.58-.001 1.139-.034a14 14 0 0 1-1.14 1.215a14 14 0 0 1-1.139-1.215m5.39 2.895c-.782.451-2.075.072-3.5-1.038a16 16 0 0 0 1.757-1.981a16.4 16.4 0 0 0 2.565-.523c.015.108.046.224.058.33c.175 1.619-.148 2.789-.88 3.212m1.6-4.854A16.6 16.6 0 0 0 17.216 12q.529-1.22.856-2.507c1.671.677 2.646 1.607 2.646 2.507s-.975 1.83-2.646 2.507z"></path>
				<path d="M12.215 13.773a1.792 1.792 0 1 0-1.786-1.8v.006a1.787 1.787 0 0 0 1.786 1.794"></path>
			</g>
		</svg>
	);
}
export function IconNextjs(props: React.SVGAttributes<any>) {
	return (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1em" height="1em" {...props}>
			<path
				fill="currentColor"
				d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10m4-14h-1.35v4H16zM9.346 9.71l6.059 7.828l1.054-.809L9.683 8H8v7.997h1.346z"
			></path>
		</svg>
	);
}
export function IconTailwind(props: React.SVGAttributes<any>) {
	return (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1em" height="1em" {...props}>
			<path
				fill="currentColor"
				d="M12 4.86q-4.76 0-5.95 4.76q1.785-2.38 4.165-1.785c.905.226 1.552.883 2.268 1.61C13.651 10.63 15 12 17.95 12q4.76 0 5.95-4.76q-1.785 2.38-4.165 1.785c-.906-.226-1.552-.883-2.27-1.61C16.3 6.23 14.95 4.86 12 4.86M6.05 12Q1.29 12 .1 16.76q1.785-2.38 4.165-1.785c.905.226 1.552.883 2.269 1.61C7.7 17.77 9.05 19.14 12 19.14q4.76 0 5.95-4.76q-1.785 2.38-4.165 1.785c-.906-.226-1.552-.883-2.27-1.61C10.35 13.37 9 12 6.05 12"
			></path>
		</svg>
	);
}

export function IconDoodleCompass(props: React.SVGAttributes<any>) {
	return (
		<svg
			fill="currentColor"
			width="800px"
			height="800px"
			viewBox="0 0 48 48"
			enableBackground="new 0 0 48 48"
			xmlns="http://www.w3.org/2000/svg"
			{...props}
		>
			<g>
				<path d="M41.704,24.708c0.001-0.002,0.002-0.004,0.003-0.007c0.015-0.062,0.004-0.121,0.007-0.181   c0.003-0.067,0.021-0.131,0.01-0.2c0-0.003-0.002-0.005-0.003-0.007c-0.012-0.077-0.048-0.144-0.076-0.214   c-0.07-0.173-0.17-0.328-0.316-0.434c-0.02-0.014-0.046-0.019-0.066-0.032c-0.088-0.055-0.179-0.105-0.282-0.131   c-0.005-0.001-0.008-0.005-0.013-0.006c-1.797-0.431-4.166-1.004-6.542-1.578c-1.795-0.435-3.595-0.87-5.157-1.246l2.298-3.898   c0.233-0.396,0.167-0.901-0.162-1.223l-0.396-0.382c-0.292-0.279-0.727-0.354-1.095-0.191l-4.993,2.208   c-0.233-1.519-0.608-2.85-0.974-4.146c-0.408-1.45-0.794-2.819-0.919-4.288c-0.001-0.01-0.007-0.017-0.008-0.027   c-0.009-0.078-0.038-0.148-0.064-0.22c-0.018-0.051-0.027-0.105-0.053-0.152c-0.031-0.057-0.079-0.101-0.121-0.15   C22.739,8.153,22.705,8.1,22.655,8.06c-0.042-0.034-0.094-0.052-0.141-0.079c-0.067-0.038-0.13-0.079-0.205-0.101   c-0.009-0.002-0.016-0.01-0.025-0.012c-0.052-0.013-0.102-0.003-0.153-0.008c-0.062-0.006-0.12-0.026-0.184-0.021   c-0.012,0.001-0.021,0.008-0.033,0.01c-0.06,0.007-0.112,0.031-0.168,0.049c-0.07,0.021-0.142,0.036-0.204,0.071   c-0.042,0.024-0.073,0.061-0.112,0.09c-0.062,0.048-0.126,0.092-0.175,0.153c-0.034,0.042-0.051,0.093-0.078,0.14   c-0.038,0.066-0.078,0.129-0.1,0.203c-0.003,0.01-0.011,0.017-0.014,0.027l-2.211,8.454l-5.131-1.882   c-0.005-0.002-0.01,0-0.015-0.002c-0.08-0.028-0.165-0.031-0.25-0.039c-0.045-0.003-0.091-0.02-0.136-0.018   c-0.049,0.003-0.096,0.026-0.145,0.036c-0.079,0.017-0.159,0.028-0.231,0.063c-0.005,0.002-0.011,0.002-0.016,0.004   c-0.048,0.024-0.08,0.065-0.123,0.096c-0.06,0.042-0.123,0.079-0.172,0.134c-0.055,0.062-0.089,0.134-0.126,0.206   c-0.021,0.04-0.054,0.07-0.07,0.114c-0.002,0.004,0,0.009-0.002,0.014c-0.03,0.085-0.035,0.175-0.041,0.265   c-0.003,0.041-0.018,0.081-0.016,0.121c0.002,0.049,0.025,0.096,0.035,0.144c0.017,0.08,0.028,0.161,0.063,0.233   c0.002,0.005,0.001,0.01,0.004,0.015c0.349,0.698,1.008,1.528,1.705,2.408c0.309,0.389,0.621,0.783,0.895,1.151   c-1.338,0.364-3.027,0.789-4.675,1.204c-2.321,0.585-4.723,1.188-6.251,1.647c-0.065,0.02-0.115,0.062-0.173,0.092   c-0.051,0.027-0.104,0.045-0.15,0.081c-0.057,0.044-0.097,0.1-0.142,0.154c-0.038,0.045-0.081,0.084-0.111,0.136   c-0.038,0.065-0.054,0.138-0.076,0.21c-0.015,0.047-0.042,0.087-0.05,0.138c-0.001,0.006,0.002,0.013,0.001,0.019   c-0.008,0.065,0.006,0.132,0.01,0.199c0.005,0.066,0,0.134,0.018,0.197c0.002,0.006,0,0.013,0.002,0.019   C3.518,24.31,3.571,24.41,3.637,24.5c0.01,0.013,0.023,0.022,0.034,0.035c0.064,0.08,0.139,0.148,0.224,0.204   c0.032,0.021,0.066,0.035,0.101,0.052c0.075,0.038,0.153,0.067,0.236,0.085c0.022,0.005,0.041,0.02,0.064,0.023l12.277,1.817   l-3.461,4.999c-0.024,0.035-0.029,0.076-0.049,0.113c-0.032,0.061-0.061,0.12-0.08,0.186c-0.018,0.063-0.024,0.124-0.03,0.188   c-0.005,0.063-0.009,0.123-0.002,0.187c0.007,0.07,0.026,0.134,0.048,0.201c0.013,0.039,0.011,0.079,0.028,0.117   c0.009,0.02,0.027,0.031,0.037,0.05c0.032,0.06,0.075,0.109,0.12,0.162c0.043,0.051,0.084,0.101,0.135,0.141   c0.018,0.014,0.026,0.034,0.045,0.047c0.055,0.038,0.114,0.059,0.173,0.084c0.025,0.011,0.047,0.026,0.073,0.035   c0.105,0.036,0.214,0.059,0.322,0.059c0.006,0,0.012-0.004,0.019-0.004c0.136-0.003,0.273-0.029,0.405-0.09   c0.01-0.005,0.023-0.012,0.034-0.017h0c0.721-0.338,1.784-0.908,2.911-1.514c0.814-0.437,1.647-0.884,2.39-1.264   c0.185,0.834,0.355,1.604,0.521,2.378l1.676,7.814c0.101,0.47,0.515,0.791,0.977,0.791c0.069,0,0.14-0.007,0.21-0.022   c0.54-0.115,0.885-0.646,0.769-1.187l-0.029-0.134c0.339-1.305,0.755-3.245,1.159-5.133c0.298-1.393,0.603-2.819,0.87-3.956   c0.849,0.433,1.803,0.953,2.735,1.462c1.362,0.744,2.649,1.446,3.643,1.9c0.014,0.006,0.028,0.004,0.042,0.01   c0.102,0.041,0.207,0.067,0.316,0.074c0.014,0,0.026,0.004,0.04,0.005c0.006,0,0.012,0.002,0.019,0.002   c0.106,0,0.214-0.023,0.317-0.059c0.029-0.01,0.055-0.023,0.082-0.036c0.044-0.02,0.089-0.031,0.13-0.058   c0.026-0.017,0.041-0.043,0.065-0.062c0.053-0.04,0.099-0.085,0.144-0.136c0.046-0.052,0.085-0.104,0.118-0.163   c0.015-0.026,0.039-0.044,0.052-0.071c0.014-0.03,0.012-0.063,0.022-0.095c0.022-0.065,0.037-0.13,0.046-0.199   c0.008-0.063,0.011-0.123,0.007-0.186c-0.004-0.063-0.015-0.123-0.031-0.186c-0.018-0.066-0.04-0.128-0.071-0.189   c-0.015-0.03-0.016-0.063-0.034-0.092l-3.599-5.766l10.995-1.648c0.027-0.004,0.048-0.021,0.073-0.026   c0.078-0.019,0.149-0.045,0.22-0.08c0.041-0.021,0.082-0.039,0.119-0.064c0.065-0.045,0.12-0.101,0.174-0.16   c0.027-0.03,0.059-0.055,0.082-0.089c0.052-0.074,0.088-0.16,0.119-0.25C41.68,24.761,41.697,24.737,41.704,24.708z M27.384,26.873   l2.469,3.954c-0.105-0.058-0.208-0.112-0.314-0.171c-1.39-0.759-2.826-1.543-3.949-2.056c-0.27-0.123-0.576-0.122-0.842,0.004   c-0.266,0.125-0.463,0.361-0.54,0.646c-0.336,1.247-0.75,3.186-1.188,5.237c-0.065,0.305-0.131,0.611-0.196,0.916l-0.653-3.049   c-0.171-0.8-0.349-1.598-0.541-2.466l-0.259-1.168c-0.065-0.296-0.262-0.547-0.534-0.681c-0.272-0.136-0.591-0.138-0.865-0.01   c-0.813,0.38-1.851,0.927-2.905,1.49l2.069-2.988c0.196-0.284,0.232-0.65,0.095-0.967c-0.137-0.317-0.429-0.541-0.771-0.592   l-9.087-1.345c0.505-0.128,1.016-0.256,1.524-0.384c2.363-0.595,4.596-1.157,6.046-1.592c0.283-0.085,0.514-0.29,0.631-0.562   s0.108-0.58-0.023-0.844c-0.313-0.625-0.86-1.354-1.434-2.084l3.083,1.131c0.111,0.041,0.228,0.062,0.344,0.062   c0.16,0,0.319-0.038,0.464-0.114c0.249-0.13,0.433-0.36,0.504-0.633l1.41-5.392c0.034,0.123,0.067,0.243,0.102,0.367   c0.445,1.582,0.907,3.219,1.07,5.147c0.027,0.322,0.208,0.611,0.486,0.776c0.278,0.164,0.619,0.185,0.914,0.054l4.205-1.858   l-1.838,3.118c-0.161,0.273-0.184,0.606-0.06,0.898s0.38,0.508,0.688,0.582c1.813,0.435,4.145,0.998,6.468,1.561   c0.524,0.127,1.046,0.253,1.563,0.378l-7.434,1.115c-0.333,0.05-0.618,0.265-0.76,0.57C27.184,26.231,27.206,26.588,27.384,26.873z   " />
				<path d="M18.926,38.338c-0.251-0.32-0.632-0.806-1.262-0.872c-2.824-0.298-5.068-1.777-7.062-4.655   c-0.594-0.859-1.04-1.837-1.513-2.873c-0.223-0.486-0.444-0.974-0.683-1.449c-0.247-0.494-0.848-0.693-1.342-0.447   c-0.494,0.248-0.694,0.849-0.447,1.342c0.228,0.455,0.44,0.92,0.652,1.386c0.488,1.068,0.992,2.175,1.688,3.18   c2.269,3.276,4.98,5.071,8.284,5.481c0.037,0.045,0.072,0.095,0.11,0.143c0.112,0.144,0.228,0.285,0.343,0.4   c0.195,0.195,0.451,0.292,0.706,0.292c0.257,0,0.513-0.098,0.708-0.294c0.391-0.392,0.389-1.024-0.002-1.414   C19.045,38.494,18.986,38.415,18.926,38.338z" />
				<path d="M27.178,9.177c5.021,2.435,8.138,5.887,9.527,10.552c0.129,0.435,0.526,0.715,0.958,0.715c0.094,0,0.19-0.014,0.285-0.042   c0.529-0.157,0.831-0.714,0.673-1.243c-1.559-5.234-5.016-9.088-10.57-11.78c-0.496-0.241-1.095-0.034-1.336,0.463   S26.681,8.937,27.178,9.177z" />
				<path d="M7.113,18.965c0.13,0.057,0.266,0.083,0.398,0.083c0.386,0,0.754-0.225,0.918-0.601c2.027-4.653,5.277-7.479,9.935-8.641   c0.536-0.134,0.861-0.677,0.729-1.213c-0.135-0.535-0.68-0.859-1.213-0.729c-5.227,1.304-9.022,4.596-11.284,9.783   C6.375,18.154,6.606,18.744,7.113,18.965z" />
				<path d="M39.174,28.654c-0.521-0.18-1.092,0.09-1.276,0.61c-1.602,4.54-5.354,7.054-9.061,9.24c-0.219,0.13-0.451,0.239-0.683,0.35   l-0.369,0.179c-0.494,0.247-0.694,0.848-0.447,1.342c0.176,0.351,0.528,0.553,0.896,0.553c0.15,0,0.303-0.034,0.446-0.105   l0.336-0.163c0.285-0.136,0.57-0.273,0.839-0.433c3.847-2.269,8.104-5.122,9.93-10.296C39.968,29.409,39.694,28.838,39.174,28.654z   " />
				<path d="M23.929,20.879c-0.239-0.168-0.479-0.335-0.682-0.513c-0.227-0.198-0.512-0.28-0.798-0.237   c-0.302-0.043-0.628,0.057-0.859,0.296c-1.059,1.096-1.823,1.888-1.729,2.941c0.104,1.161,1.198,1.948,3.185,3.379   c0.172,0.124,0.377,0.188,0.584,0.188c0.091,0,0.183-0.013,0.272-0.038c0.294-0.083,0.533-0.296,0.65-0.577   c0.121-0.291,0.278-0.579,0.431-0.862c0.44-0.82,0.896-1.668,0.689-2.576C25.465,21.963,24.648,21.387,23.929,20.879z    M23.264,24.432c-0.699-0.517-1.335-1.019-1.411-1.21c0.034-0.159,0.347-0.526,0.678-0.883c0.081,0.059,0.163,0.116,0.246,0.175   c0.309,0.218,0.885,0.624,0.946,0.809C23.752,23.505,23.464,24.057,23.264,24.432z" />
			</g>
		</svg>
	);
}
export function IconDoodleMountains(props: React.SVGAttributes<any>) {
	return (
		<svg
			fill="currentColor"
			xmlns="http://www.w3.org/2000/svg"
			width="800px"
			height="800px"
			viewBox="0 0 189.627 189.627"
			{...props}
		>
			<g>
				<path
					d="M47.248,149.467c-2.364-3.025-5.23-5.575-8.175-8.022c-1.117-1.435-2.196-2.896-3.223-4.364
		c-0.467-0.667-0.942-1.457-1.429-2.283c0.534-0.11,1.089-0.173,1.614-0.3c3.975-0.965,3.748-5.748,1.023-7.825
		c-6.846-5.222-11.132-13.187-17.815-18.65c-2.258-1.846-5.385-1.198-6.361,1.679c-2.389,7.045-4.318,14.237-6.694,21.288
		c-0.731,2.168,1.837,3.781,3.573,3.097c0.992,0.679,2.124,1.09,3.316,1.363c-3.677,6.9-8.244,13.184-12.423,20.038
		c-1.88,3.084,0.546,7.173,4.105,7.153c5.756-0.032,11.505-0.29,17.253-0.563c0.088,1.587,0.126,3.182,0.166,4.777
		c-0.129,0.768-0.233,1.529-0.149,2.221c0.126,1.046,0.301,2.081,0.457,3.12c0.094,0.859,0.21,1.715,0.376,2.567
		c0.913,5.531,9.142,3.125,8.345-2.302c-0.526-3.579-0.398-7.18-0.438-10.772c3.995-0.169,7.99-0.312,11.99-0.337
		c3.399-0.022,5.041-3.015,4.499-5.717C48.449,153.931,48.702,151.327,47.248,149.467z"
				/>
				<path
					d="M97.084,112.744c-1.289-5.634-4.888-10.764-10.149-12.592c-7.347-2.553-14.773-1.438-19.414,3.689
		c-3.172,2.277-4.711,6.114-4.383,9.974c0.005,0.062,0.024,0.121,0.03,0.182c-0.879,7.212,1.696,15.163,6.448,20.372
		c2.474,2.711,6.093,4.34,9.76,4.422c0.209,1.427,0.561,2.835,0.703,4.28c0.264,2.696,0.305,5.433,0.407,8.14
		c-0.286,5.055,8.188,5.935,8.407,0.122c0.146-3.881,0.628-9.004-0.493-13.169c4.01-0.772,7.452-3.591,9.2-8.557
		C99.429,124.409,99.437,117.881,97.084,112.744z"
				/>
				<path
					d="M179.476,156.14c-6.538-6.586-12.466-13.513-18.481-20.558c2.957-0.038,5.915-0.062,8.872-0.139
		c3.112-0.082,4.342-3.078,3.25-5.664c-4.998-11.838-12.282-24.641-23.875-31.063c-1.807-1.001-4.288-0.141-4.808,1.954
		c-2.553,10.312-5.802,20.458-9.531,30.401c-0.668,1.782,1.305,3.141,2.837,2.817c0.622,1.07,1.682,1.878,3.299,1.868
		c1.593-0.012,3.186-0.021,4.779-0.029c-3.684,9.241-8.028,18.219-11.374,27.616c-0.908,2.554,1.443,5.222,3.975,5.217
		c5.161-0.011,10.287-0.425,15.387-1.067c-0.032,0.546,0.022,1.104,0.118,1.707c0.018,0.114,0.081,0.196,0.108,0.304
		c0.569,2.171,0.943,4.51,1.072,6.729c0.32,5.472,8.763,5.543,8.562,0c0.035-2.439,0.136-7.239-1.299-10.013
		c5.084-0.858,10.148-1.859,15.202-2.853C180.839,162.725,181.634,158.313,179.476,156.14z"
				/>
				<path
					d="M189.189,91.574c-11.959-26.322-26.702-63.262-52.55-78.895c-9.563-5.785-17.802-4.232-23.904,4.754
		c-7.483,11.02-14.384,24.387-20.059,37.77c-7.624-17.347-24.001-53.168-40.5-41.383c-10.032,7.167-14.039,23.087-17.551,34.118
		c-4.305,13.525-6.223,27.527-9.588,41.258c-0.647,2.642,3.045,3.544,3.99,1.1c5.884-15.219,9.493-31.294,15.16-46.583
		c3.371,7.476,11.598,9.296,16.831,2.959c1.816,2.397,4.321,4.233,7.454,4.294c4.403,0.086,7.921-2.398,9.627-6.047
		c3.205,6.812,6.274,13.991,10.813,19.664c-1.628,4.27-3.147,8.501-4.462,12.582c-1.021,3.171,3.975,5.34,5.419,2.284
		c4.861-10.286,10.568-20.045,16.092-29.931c2.709,10.633,17.406,14.688,22.44,5.119c4.499,3.905,10.013,4.15,14.257-0.666
		c4.959,4.861,11.257,5.693,16.962-0.739c7.829,13.988,14.2,28.958,22.368,42.55C184.812,100.479,191.374,96.379,189.189,91.574z
		 M75.19,39.625c-1.617,1.869-2.737,4.616-5.13,5.576c-3.323,1.334-5.609-2.983-6.624-5.302c-1.023-2.335-4.261-1.314-4.938,0.646
		c-3.295,9.529-9.487,5.483-12.65-0.999c1.544-3.841,3.194-7.641,5.127-11.334c2.025-3.869,5.941-12.046,11.603-7.505
		c5.101,4.09,8.468,10.986,11.644,16.566c0.404,0.71,0.786,1.454,1.174,2.19C75.329,39.52,75.25,39.556,75.19,39.625z
		 M145.471,45.989c-1.342-2.076-5.046-2.619-6.247,0c-2.375,5.177-7.353,3.146-9.596-1.241c-1.596-3.121-6.545-1.614-6.485,1.756
		c0.251,14.076-15.085,6.193-12.993-4.69c0.64-1.193,1.307-2.368,1.932-3.57c2.817-5.424,5.494-10.912,8.302-16.342
		c5.996-11.598,20.686,5.22,23.913,8.915c4.619,5.288,8.561,11.05,12.177,17.037C151.294,50.145,149.283,51.885,145.471,45.989z"
				/>
			</g>
		</svg>
	);
}
export function IconDoodleArrow(props: React.SVGAttributes<any>) {
	return (
		<svg
			fill="currentColor"
			xmlns="http://www.w3.org/2000/svg"
			width="800px"
			height="800px"
			viewBox="0 0 365.28 365.28"
			{...props}
		>
			<g>
				<path
					d="M364.091,335.48c-19.584-32.436-40.392-64.26-59.976-96.695c-3.672-6.12-14.076-3.673-13.465,3.672
		c0,14.076,0.612,27.54,0.612,41.616c-9.792-10.404-12.24-22.645-14.076-37.332c-1.224-6.12-3.672-12.853-10.403-14.688
		c-10.404-3.06-22.032,7.344-29.988,12.852c-20.196,14.076-38.556,30.601-60.588,42.229c-25.704,12.852-26.316-5.508-20.808-25.704
		c5.508-21.42,15.3-42.84,26.316-61.812c19.584-33.048,42.229-67.32,47.736-105.876c3.06-21.42-7.956-53.856-34.885-52.632
		c-33.047,1.224-70.992,25.704-92.412,50.184c-12.24,12.24-82.008,104.04-88.74,51.408c-4.896-38.556,26.928-85.68,45.9-117.504
		c2.448-4.284-3.672-8.568-6.732-4.896C28.715,49.677,9.743,87.009,1.175,124.341c-4.284,20.196,2.448,57.528,31.824,49.572
		c34.272-9.18,56.916-47.736,78.948-73.44c13.464-16.524,34.884-28.764,53.244-38.556c39.168-20.808,56.916,9.792,47.124,45.288
		c-12.239,43.452-43.452,78.947-61.2,119.952c-6.12,14.688-28.152,63.647-4.284,75.888c27.54,14.076,64.26-20.809,83.844-36.108
		c-1.224,0.612,31.212-25.704,33.048-20.195c1.836,5.508,1.836,12.239,3.061,18.359c2.447,11.628,7.344,20.809,15.3,28.152
		c-11.628-0.612-23.256,0-34.884,1.836c-6.12,1.224-6.732,10.404-1.836,13.464c34.884,19.584,74.052,24.48,111.384,37.332
		C362.255,348.333,367.763,340.989,364.091,335.48z M297.995,304.269c3.672,0,4.896-3.06,4.284-5.508
		c1.836-1.224,3.06-3.06,3.06-5.508c0-7.956,0-16.524,0-24.48c12.24,19.584,24.48,38.557,36.72,58.141
		c-23.256-6.732-47.124-11.628-69.155-20.809C280.859,305.493,289.427,304.881,297.995,304.269z"
				/>
			</g>
		</svg>
	);
}
export function IconDoodlePhoto(props: React.SVGAttributes<any>) {
	return (
		<svg
			width="157"
			height="156"
			viewBox="0 0 157 156"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			{...props}
		>
			<g clipPath="url(#clip0_8_2560)">
				<path
					d="M52.3816 53.2803C55.1411 55.8328 58.5193 56.971 63.3378 56.971C63.3609 56.9733 63.3841 56.9733 63.4071 56.971C63.5554 56.9573 63.7373 56.9443 63.9431 56.93C64.4894 56.8917 65.2377 56.8377 65.9725 56.7285C68.0872 56.4465 70.1236 55.7401 71.9607 54.6514C73.7984 53.5626 75.3985 52.1137 76.6666 50.391C77.8757 48.6838 78.7308 46.7497 79.18 44.7038C79.6293 42.6579 79.6636 40.5421 79.2817 38.4825C78.4758 33.7759 76.2393 30.7682 72.6442 29.5456C70.1922 28.7181 67.5946 28.4137 65.0189 28.6518C62.4429 28.8901 59.9447 29.6656 57.6843 30.9288C55.5114 32.1174 53.6139 33.7547 52.1166 35.7328C50.6193 37.711 49.5563 39.9853 48.9975 42.4058C48.0136 46.6334 49.1522 50.2935 52.3816 53.2803ZM65.6786 36.7853C65.8081 36.7853 65.9414 36.7853 66.0702 36.7853C68.2458 36.7853 69.9644 37.0531 70.7955 39.2416C71.2163 40.4323 71.2739 41.7219 70.9593 42.9453C70.6453 44.1688 69.9741 45.27 69.0323 46.1076C66.6754 48.2565 61.6374 48.8304 58.8631 47.2671C57.0875 46.2674 56.5464 45.0234 56.995 42.9739C57.9109 38.7892 60.6697 36.8243 65.6786 36.7853Z"
					fill="currentColor"
				/>
				<path
					d="M33.8781 154.127C35.4776 154.062 37.1353 153.997 38.7439 153.997C48.5751 154.046 57.5597 154.144 66.2106 154.297C80.0629 154.541 94.2058 154.841 108.241 155.188C109.387 155.25 110.526 155.41 111.645 155.665C112.195 155.774 112.746 155.882 113.294 155.97C113.329 155.976 113.364 155.979 113.399 155.979H120.022C120.055 155.979 120.087 155.976 120.119 155.971C121.447 155.776 122.779 155.598 124.111 155.422C126.991 155.042 129.97 154.649 132.865 154.034C146.162 151.213 156.827 137.547 156.639 123.568C156.513 114.22 156.538 104.712 156.562 95.5162C156.579 88.9168 156.595 82.0937 156.558 75.3818C156.522 69.2458 156.305 63.0122 156.096 56.9867L155.962 53.1159C155.914 51.6651 155.871 50.2135 155.832 48.761C155.703 43.9841 155.567 39.0447 155.098 34.208C154.602 29.443 153.714 24.7274 152.444 20.1096C148.91 6.97957 136.391 0.810472 125.556 0.525123C122.459 0.443873 119.324 0.663455 116.291 0.875355C114.009 1.03525 111.651 1.20035 109.34 1.23415C103.051 1.32645 96.6533 1.36416 90.4696 1.40316C82.3298 1.45256 73.9129 1.50465 65.6352 1.6769L64.3894 1.70357C52.5224 1.95057 40.2502 2.20529 28.2239 3.14194C15.2578 4.15139 6.66227 10.3836 2.67488 21.667C2.00579 23.383 1.61373 25.1952 1.51358 27.0353L1.44887 32.4667C1.25144 48.3338 1.04689 64.7419 1.09479 80.8815C1.11551 88.129 1.35888 95.4922 1.5945 102.613C1.72396 106.605 1.86313 110.731 1.95829 114.789C2.06315 119.209 2.10007 122.925 1.94019 126.69C1.35762 140.351 13.2278 153.461 26.8393 154.196C29.1897 154.322 31.5737 154.223 33.8781 154.127ZM9.50715 38.6314C9.42682 32.8611 10.7874 27.1627 13.4648 22.0564C15.909 17.5194 19.5086 14.6898 23.876 13.8747C30.7885 12.5845 37.5567 11.4106 44.3728 11.226C61.6953 10.7554 79.314 10.4798 96.351 10.2133C104.941 10.0784 113.531 9.9361 122.121 9.78621C126.717 9.70041 131.27 11.0564 136.473 14.049C142.152 17.3133 143.962 23.2004 144.984 28.5291C147.13 39.7195 148.078 49.1009 147.969 58.0514C147.925 61.5805 147.893 65.1183 147.872 68.666C147.628 68.4405 147.391 68.2065 147.136 67.9939C143.776 65.1918 140.32 62.3947 136.977 59.69C132.948 56.4296 128.782 53.06 124.761 49.6585C119.514 45.2229 116.452 45.3361 111.653 50.1448C100.239 61.5776 88.5646 73.2271 77.2737 84.4929L64.5085 97.2329L64.2826 97.0463C63.8664 96.7025 63.5285 96.4236 63.188 96.1493C61.404 94.7057 59.6228 93.2588 57.8445 91.8092C53.5076 88.2772 49.0166 84.6255 44.5385 81.1103C41.2891 78.5597 38.964 78.5948 35.9624 81.2325C27.163 88.9675 18.269 96.8539 9.62554 104.523C9.53751 84.1692 9.47284 61.6297 9.50715 38.6314ZM10.5163 112.695C12.1993 111.275 13.8788 109.851 15.5549 108.422C18.7228 105.729 21.9982 102.944 25.2547 100.253C28.7418 97.3694 32.3466 94.4723 35.833 91.6728C37.2687 90.5184 38.7105 89.3575 40.1582 88.1907C42.0937 89.7585 44.014 91.3133 45.9192 92.8532C50.8918 96.8734 55.5894 100.669 60.3483 104.586C64.1202 107.691 66.4106 107.576 69.7773 104.122C70.9055 102.963 72.0156 101.786 73.1251 100.612C74.5777 99.0704 76.0794 97.4773 77.5973 95.9595C89.0643 84.4981 100.746 72.8676 112.044 61.6199L116.97 56.7156C117.445 56.2411 117.957 55.7848 118.368 55.4156L118.407 55.3818C120.511 57.0354 122.6 58.6821 124.674 60.3218C130.877 65.2204 136.736 69.8477 142.814 74.4569C144.354 75.5281 146.045 76.3627 147.83 76.9334C147.792 89.1469 147.836 101.358 147.881 113.3C147.896 116.932 147.909 120.564 147.92 124.195C147.948 132.995 140.891 142.63 132.508 145.233C126.235 147.137 119.685 147.952 113.139 147.642C104.227 147.274 95.1651 146.843 86.4052 146.427C82.7583 146.254 79.1107 146.08 75.4625 145.907H75.4321L65.5827 145.903C60.2781 145.9 54.9739 145.898 49.6704 145.898C43.9145 145.898 38.1588 145.902 32.403 145.911H32.3343C25.8043 145.911 20.9075 144.263 16.9285 140.73C12.0485 136.394 9.75571 130.455 9.71234 122.038C9.69745 119.217 9.68321 116.33 9.66897 113.393C9.95443 113.165 10.2399 112.928 10.5163 112.695Z"
					fill="currentColor"
				/>
			</g>
			<defs>
				<clipPath id="clip0_8_2560">
					<rect width="156" height="156" fill="white" transform="translate(0.777344)" />
				</clipPath>
			</defs>
		</svg>
	);
}
export function IconDoodleCoffee(props: React.SVGAttributes<any>) {
	return (
		<svg
			width="151"
			height="150"
			viewBox="0 0 151 150"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			{...props}
		>
			<path
				d="M108.27 135.14C108.384 135.009 108.265 135.083 108.246 135.176C106.237 144.847 99.8055 148.928 90.4218 149.246C86.9295 149.364 83.4318 149.54 79.9401 149.475C67.1586 149.237 54.379 148.84 41.5969 148.647C36.2674 148.566 30.93 149.001 25.6025 148.893C22.9829 148.801 20.387 148.361 17.8827 147.587C11.5326 145.706 6.80174 141.856 4.97974 135.277C3.9086 131.409 2.85586 127.423 2.65568 123.447C1.68386 104.14 0.896231 84.8239 0.292838 65.4987C0.259224 61.2417 0.635739 56.9913 1.41715 52.8065C2.03017 49.0555 3.12363 48.7069 6.78403 48.7024C16.4978 48.6897 26.2116 48.5584 35.9254 48.3086C57.8786 47.752 79.8285 47.0615 101.782 46.5174C106.188 46.4085 106.388 46.8456 107.287 51.0797C107.889 53.9111 108.752 56.6867 109.569 59.7492C109.846 59.7335 110.366 59.7347 110.877 59.6685C130.965 57.0707 144.376 66.3014 148.945 85.9108C150.494 92.5569 151.203 99.3001 150.151 106.07C147.805 121.159 137.914 131.1 122.366 133.859C117.895 134.651 113.293 134.706 108.27 135.14ZM7.79021 56.3474C7.79021 58.2659 7.70816 60.1095 7.80399 61.944C8.36778 72.7394 8.80623 83.5454 9.61024 94.3244C10.4307 105.317 11.3981 116.312 12.7337 127.248C13.6145 134.463 17.8683 138.508 25.0073 139.792C28.4378 140.461 31.9162 140.856 35.4096 140.973C51.5756 141.26 67.7434 141.437 83.9129 141.507C86.9645 141.417 90.008 141.145 93.0268 140.689C96.2554 140.315 97.9776 138.375 98.7061 135.242C100.261 128.56 100.075 121.822 99.7943 115.042C99.1406 99.2258 98.5696 83.4067 98.0813 67.5846C97.931 62.9364 98.0577 58.279 98.0577 53.2049L7.79021 56.3474ZM109.594 127.126C115.415 126.032 121.014 125.534 126.246 123.879C136.041 120.781 141.507 113.69 142.492 103.432C143.157 96.5166 142.045 89.7642 140.223 83.0603C136.144 68.042 119.247 63.2672 108.706 65.9647V73.9248C126.409 77.4159 131.52 86.5455 132.052 98.5762C132.249 102.987 130.674 106.912 128.045 110.428C123.499 116.511 116.872 118.375 109.594 119.192V127.126ZM108.823 110.478C112.06 109.276 114.784 108.509 117.286 107.28C121.349 105.289 123.418 101.836 123.56 97.2943C123.836 88.481 118.428 82.5504 108.823 80.9457V110.478Z"
				fill="currentColor"
			/>
			<path
				d="M51.7362 2.12827C51.4921 3.51446 51.3995 4.38875 51.1809 5.23017C49.6812 10.9987 50.9722 16.2376 54.1292 21.1411C55.7228 23.6161 57.5921 25.9704 58.7932 28.6233C60.0683 31.4908 60.9871 34.5037 61.5288 37.5948C61.7027 39.3173 61.3493 41.052 60.5154 42.5692C60.0362 43.5163 58.4591 44.5106 57.4667 44.424C56.4743 44.3374 55.4642 43.0326 54.7508 42.0514C54.2939 41.297 54.0914 40.4158 54.1732 39.5376C54.5263 34.0644 52.0302 29.619 49.1614 25.3055C45.7845 20.2274 43.9192 14.7063 44.821 8.59647C45.2757 6.03906 46.0934 3.55972 47.2495 1.23366C47.5901 0.501187 49.2618 -0.0606076 50.203 0.0837867C50.8869 0.189457 51.368 1.5927 51.7362 2.12827Z"
				fill="currentColor"
			/>
			<path
				d="M67.708 11.3474C68.516 8.197 69.1316 5.21921 70.0708 2.3497C70.6136 0.689164 71.9742 -0.488994 73.8993 0.200817C75.7042 0.845997 75.8295 2.48887 75.3563 4.04767C73.5186 10.1076 75.0347 15.6051 77.6981 21.0862C79.5766 25.0113 81.1887 29.0585 82.5235 33.2002C83.072 35.0863 83.1482 37.0784 82.7454 39.0009C82.5248 40.1344 81.2122 41.6833 80.1929 41.8513C79.2386 42.0082 77.8918 40.7264 76.9768 39.8167C76.4222 39.2667 76.356 38.2238 76.0731 37.4014C74.0903 31.6421 72.0504 25.9011 70.1496 20.1148C69.2045 17.2545 68.5199 14.3009 67.708 11.3474Z"
				fill="currentColor"
			/>
			<path
				d="M31.209 41.5391C31.2061 41.4289 31.2162 41.3187 31.2392 41.2109C33.2916 35.1549 30.4687 30.6104 27.0262 25.9314C24.6289 22.7749 23.3055 18.9336 23.25 14.9704C23.1945 11.0072 24.4097 7.13036 26.7177 3.908C27.8039 2.5859 29.17 1.52131 30.7174 0.791033C31.3515 0.462864 33.0146 0.851377 33.2942 1.39089C33.6834 2.13714 33.4439 3.4361 33.056 4.31428C32.3596 5.88949 31.1309 7.24477 30.5153 8.84295C28.3421 14.4829 29.0648 19.7415 32.928 24.5124C35.4221 27.5886 37.5689 30.8513 38.1229 34.9192C38.6591 38.8573 37.4285 42.0733 34.7572 43.4818C32.691 44.5766 31.2655 43.7949 31.209 41.5391Z"
				fill="currentColor"
			/>
		</svg>
	);
}
export function IconDoodleTech(props: React.SVGAttributes<any>) {
	return (
		<svg
			width="151"
			height="146"
			viewBox="0 0 151 146"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			{...props}
		>
			<path
				d="M128.168 43.2406V65.8534C132.871 66.198 137.202 66.4894 141.528 66.8425C143.595 67.0119 145.763 66.981 147.673 67.6485C148.879 68.0705 150.379 69.5518 150.484 70.6768C150.585 71.767 149.303 73.375 148.201 74.0779C147.111 74.7717 145.487 74.7107 144.085 74.8177C138.869 75.2161 133.649 75.5469 128.202 75.919V93.9729C133.162 94.5235 138.221 95.0736 143.278 95.6544C144.578 95.8034 145.865 96.0614 147.161 96.2451C148.973 96.5044 150.346 97.376 150.467 99.2945C150.606 101.487 148.948 102.362 147.159 102.693C145.004 103.044 142.831 103.281 140.651 103.403C136.531 103.722 132.406 103.98 127.94 104.287C127.84 104.95 127.678 106.098 127.491 107.241C126.605 112.744 123.697 116.851 118.49 118.815C114.749 120.226 110.745 120.967 106.847 121.939C105.605 122.182 104.352 122.361 103.092 122.475C103.092 126.715 103.097 130.818 103.092 134.921C103.088 136.882 103.281 138.875 102.994 140.795C102.511 144.038 100.172 145.972 97.4752 145.726C94.8499 145.486 92.6676 143.064 92.8152 139.91C92.98 136.318 93.6028 132.748 94.0131 129.168C94.25 127.112 94.4679 125.054 94.735 122.618H74.9366C75.1473 126.985 75.4177 131.513 75.5608 136.045C75.6931 137.883 75.5846 139.731 75.2378 141.542C75.0595 142.586 74.5005 143.528 73.6688 144.184C72.837 144.841 71.7915 145.167 70.7341 145.098C69.7286 145.124 68.7494 144.775 67.9871 144.119C67.2248 143.463 66.734 142.546 66.6103 141.548C66.3004 139.403 66.2421 137.23 66.4363 135.071C66.7212 130.836 67.1997 126.614 67.6388 121.952H48.051C48.0162 122.674 47.9158 123.706 47.9257 124.737C47.9716 129.327 48.1442 133.919 48.0865 138.507C48.0359 142.487 46.0794 145.019 43.435 144.925C40.7617 144.831 39.0237 142.251 39.3224 138.195C39.6505 133.732 40.3069 129.296 40.8057 124.846C40.9481 123.572 41.0407 122.292 41.168 120.879C39.5521 120.537 38.1718 120.289 36.8152 119.948C31.8539 118.695 28.4685 115.809 27.316 110.654C26.6971 107.887 26.0854 105.119 25.4599 102.355C25.2754 101.538 25.0562 100.73 25.0083 100.54C18.8551 100.54 13.0872 100.545 7.31999 100.534C6.55418 100.528 5.78919 100.483 5.02808 100.398C2.14676 100.092 0.543315 98.7373 0.49212 96.5963C0.442239 94.496 1.97348 92.974 4.87844 92.6038C7.91006 92.2172 10.9705 92.0544 14.0199 91.8083C17.2622 91.5457 20.5052 91.3042 23.886 91.0423C23.5657 84.5584 23.25 78.1657 22.9231 71.5491C20.4756 71.5491 18.1128 71.5491 15.75 71.5491C12.5819 71.5531 9.41176 71.6299 6.24689 71.5294C5.05125 71.4639 3.87461 71.2016 2.76437 70.753C1.07692 70.1039 -0.158311 68.7 0.446833 66.9554C1.01686 65.6284 2.0674 64.5659 3.38787 63.9809C4.71499 63.4165 6.39589 63.7183 7.91662 63.566C12.9973 63.0541 18.0747 62.508 23.5762 61.9311V45.1472C18.0629 44.59 12.3449 44.0131 6.62494 43.4329C6.07876 43.4059 5.53548 43.337 4.99986 43.2268C3.2074 42.7542 1.68272 41.9561 1.63875 39.7915C1.59346 37.56 3.11814 36.6169 4.96901 36.4758C8.22707 36.2264 11.5107 36.1685 14.7793 36.2289C18.2625 36.2946 21.7417 36.5886 25.4231 36.7941C27.2517 32.3559 28.0242 26.9667 32.7977 24.5579C37.1138 22.3795 41.8552 21.0399 46.8309 19.1713C47.27 15.1434 47.7885 10.3961 48.3031 5.6508C48.6969 2.04094 49.7529 0.503147 51.7928 0.587815C53.7618 0.669201 54.7988 2.32317 55.0515 5.89692C55.3502 10.1244 55.6048 14.3545 55.8837 18.664C58.8602 18.664 61.6661 18.7106 64.4693 18.6502C67.1898 18.5918 69.9071 18.4244 72.5042 18.3096C72.9249 13.2952 73.3089 8.45532 73.7473 3.62073C73.9002 1.9346 74.2573 0.178285 76.3615 0.0227331C78.6449 -0.146602 79.401 1.69437 79.6314 3.42973C80.2733 8.26956 80.6815 13.1435 81.2335 18.5458C83.4454 18.6417 86.2361 18.8084 89.0288 18.8701C91.746 18.9305 94.4646 18.8832 97.3295 18.8832C97.6176 14.6584 97.8677 10.5622 98.1919 6.47186C98.312 4.95703 98.3449 3.34506 98.9139 1.9871C99.1537 1.48556 99.5053 1.0458 99.9418 0.701584C100.378 0.357368 100.888 0.117949 101.432 0.00174185C102.356 -0.0474835 103.401 0.957352 104.27 1.65701C104.624 2.07757 104.823 2.60787 104.831 3.15804C105.357 8.24663 105.84 13.3392 106.384 18.9227C117.58 18.0812 125.388 22.5777 126.453 34.8342C132.225 34.8342 137.661 34.8086 143.097 34.8513C144.606 34.8631 146.297 34.703 147.574 35.3107C148.75 35.8726 150.161 37.327 150.221 38.4539C150.283 39.6176 149.085 41.2244 147.986 41.966C146.924 42.6814 145.295 42.6919 143.899 42.7503C138.676 42.9754 133.446 43.087 128.168 43.2406ZM118.668 74.8262H119.255C119.255 71.1126 119.367 67.3958 119.233 63.6869C118.905 54.6419 118.813 45.5719 117.969 36.5683C117.171 28.0517 115.926 27.1754 107.159 26.9779C92.5271 26.6497 77.8862 26.1903 63.2584 26.4239C55.8897 26.542 48.5118 27.8619 41.2002 29.0269C37.1309 29.6754 34.2738 32.1623 33.8085 36.6405C33.5834 38.8031 33.2322 40.9612 33.1581 43.129C32.9513 49.1293 32.8876 55.1354 32.717 61.1376C32.3232 75.1242 32.1631 89.0976 35.1881 102.877C36.6491 109.531 36.7699 109.965 43.4206 110.236C62.9512 111.034 82.4923 111.604 102.032 112.082C105.306 112.058 108.567 111.648 111.745 110.862C117.49 109.615 118.586 108.223 118.641 102.35C118.731 93.1754 118.668 84.0005 118.668 74.8262Z"
				fill="currentColor"
			/>
			<path
				d="M48.3307 70.4793C48.3307 64.8033 48.2742 59.1246 48.3471 53.4512C48.4127 48.2471 50.026 46.1495 55.2143 45.0462C58.4143 44.3596 61.6725 43.98 64.9446 43.9127C73.6771 43.7597 82.4143 43.8543 91.1495 43.8635C91.9141 43.869 92.6777 43.9229 93.4355 44.0249C98.5707 44.6871 101.264 46.7034 102.217 51.813C103.254 57.1608 103.84 62.5864 103.968 68.0324C104.077 75.1038 103.421 82.1857 103.191 89.2656C103.08 92.672 101.159 94.4973 98.1369 95.212C95.2788 95.912 92.3719 96.3946 89.4411 96.656C78.7683 97.5092 68.0648 98.0343 57.4118 96.6028C50.6928 95.701 48.9293 93.1656 49.1071 86.5136C49.2502 81.1736 49.136 75.8264 49.136 70.4818L48.3307 70.4793ZM95.8042 87.6917C95.8042 81.597 95.7695 75.6151 95.8134 69.6359C95.8581 63.572 96.1764 57.4936 94.8394 51.4441C91.7467 51.2426 88.9271 50.8915 86.1101 50.906C77.1728 50.9526 68.2322 51.0267 59.3007 51.3195C55.7256 51.4369 55.5524 51.7552 55.7322 55.2384C56.3071 66.3351 57.0015 77.4227 57.6467 88.4642C61.9996 89.7119 84.5848 89.2932 95.8042 87.6917Z"
				fill="currentColor"
			/>
		</svg>
	);
}
export function IconDoodleGuitar(props: React.SVGAttributes<any>) {
	return (
		<svg
			width="162"
			height="152"
			viewBox="0 0 162 152"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			{...props}
		>
			<g clipPath="url(#clip0_8_2888)">
				<path
					d="M159.553 16.6273C159.369 16.4485 159.175 16.2797 158.973 16.1212C158.633 15.8643 158.329 15.5627 158.069 15.2247C157.186 13.9494 156.316 12.6617 155.452 11.3733C153.982 9.1884 152.458 6.92206 150.867 4.764C149.794 3.37389 148.502 2.16676 147.042 1.18955C145.127 -0.145441 143.131 -0.0173458 141.262 1.54736L141.006 1.76256C138.053 4.24483 134.997 6.80064 132.036 9.3702C127.983 12.8777 126.02 16.7868 126.041 21.3346C125.997 22.8655 125.815 24.3892 125.495 25.887L125.4 26.3996C125.292 27.1234 124.946 27.7905 124.416 28.295C122.149 30.0888 119.843 31.8221 117.617 33.5011L115.331 35.2345L115.128 35.1033C114.326 34.5638 113.537 34.0531 112.762 33.5517C111.133 32.5502 109.561 31.4582 108.054 30.2811C103 26.0542 96.6157 23.747 90.0267 23.7663C88.5624 23.7674 87.1001 23.871 85.6496 24.0761C74.3193 25.6277 66.3533 30.0114 61.2828 37.4772C58.4333 41.8737 55.9606 46.5031 53.8911 51.3161C51.7599 56.0575 48.3608 58.8902 43.5117 59.9693C42.7294 60.1445 41.947 60.3132 41.1647 60.4819C40.0784 60.7175 38.9988 60.9537 37.9204 61.1965C31.6688 62.6195 23.5617 64.8248 16.386 69.3167C6.91039 75.2514 -1.82349 88.2475 1.3801 102.775C5.41329 121.045 15.2866 135.444 30.7243 145.581C41.0702 152.372 52.0159 152.79 63.259 146.836C73.0177 141.662 79.91 133.354 84.3409 121.435C85.9305 116.897 87.2655 112.273 88.3406 107.587C88.7036 105.877 89.5207 104.296 90.7067 103.012C91.8921 101.727 93.4023 100.787 95.0779 100.289C96.9728 99.6415 98.9083 99.0279 100.777 98.4345L102.449 97.895C114.502 94.0436 122.804 85.9779 127.133 73.9328C131.071 62.9864 129.426 53.2411 122.244 44.9725C121.858 44.5159 121.5 44.0363 121.171 43.5365C121.003 43.3002 120.834 43.0509 120.652 42.7943L120.463 42.5382L120.706 42.3354C121.448 41.7217 122.17 41.108 122.884 40.5009C124.853 38.8351 126.715 37.2573 128.664 35.7602C129.366 35.2207 130.553 35.2411 131.342 35.2542C132.502 35.2745 133.682 35.3421 134.828 35.409C137.012 35.5889 139.206 35.6072 141.392 35.4635C143.77 35.3147 146.067 34.54 148.049 33.2176C151.945 30.148 155.67 26.8675 159.207 23.391L159.605 23.0134C160.037 22.6398 160.389 22.1836 160.642 21.6716C160.895 21.1596 161.042 20.6022 161.076 20.0323C161.06 19.3923 160.917 18.7618 160.656 18.1773C160.395 17.5927 160.02 17.0658 159.553 16.6273ZM117.051 69.4211C113.746 79.9356 107.359 86.329 97.5261 88.9596C95.032 89.6271 92.6633 90.3622 90.4783 91.1446C84.0239 93.4713 79.8496 97.7605 78.0551 103.891C77.8261 104.674 77.5898 105.456 77.3542 106.238C76.7635 108.207 76.1465 110.251 75.668 112.281C73.6583 120.759 69.6652 127.813 63.8051 133.249C58.5038 138.165 53.1494 140.594 47.5646 140.594C45.9028 140.586 44.2478 140.38 42.6349 139.98C40.8664 139.521 39.174 138.808 37.6106 137.862C23.5348 129.499 14.8619 116.975 11.827 100.64C10.2013 91.8659 13.6648 84.2786 21.8559 78.6945C26.8867 75.2619 32.9296 73.5554 37.7924 72.1863C39.3637 71.7413 40.9822 71.3567 42.5469 70.9858C43.2551 70.8244 43.9633 70.6577 44.6649 70.4804C53.0142 68.43 58.7604 63.5811 62.2469 55.6565C63.9127 51.8661 66.2391 46.9764 69.4361 42.7141C77.3404 32.1727 93.7764 29.8053 104.616 37.6492C105.466 38.3142 106.249 39.0596 106.956 39.8749C107.32 40.2687 107.698 40.6702 108.102 41.0818L108.345 41.3181L81.3276 67.7895L81.1051 67.6543C74.5162 63.7294 69.1073 64.0326 64.0899 68.5987C58.1343 74.0142 56.8197 81.0212 60.3868 88.3256L60.5017 88.5547L41.4489 105.751L41.2264 105.589C40.9232 105.373 40.6468 105.129 40.3731 104.894C39.9446 104.449 39.4184 104.109 38.836 103.902C37.7859 103.673 36.4213 103.66 35.7473 104.153C35.2813 104.489 35.0187 106.162 35.3489 106.675C37.568 110.074 40.549 114.512 43.874 118.666C44.0937 118.96 44.3708 119.206 44.6884 119.389C45.006 119.572 45.3576 119.688 45.7216 119.731C46.5305 119.791 47.3304 119.529 47.9473 119.003C49.0466 118.092 49.2219 116.359 48.3719 114.788C47.8804 113.924 47.3307 113.095 46.7265 112.306C46.4364 111.912 46.1397 111.504 45.8496 111.079L45.6744 110.829L47.1315 109.575C48.0011 108.826 48.8648 108.084 49.7141 107.336L53.0661 104.415C56.6273 101.306 60.3094 98.1024 63.891 94.9061C65.1788 93.7529 66.2778 93.2403 68.0854 94.0226C72.28 95.8433 76.4753 95.3714 80.5558 92.6332C89.2555 86.7859 90.4895 83.218 87.1651 73.56L87.0909 73.3578L112.274 49.3418L112.503 49.6386C117.752 56.3102 119.202 62.6031 117.051 69.4211ZM81.9367 77.9259L81.984 78.6341C82.0746 79.7066 81.9439 80.7856 81.6007 81.8049C81.2574 82.8248 80.7081 83.7634 79.9874 84.5622C78.999 85.6077 77.8097 86.4439 76.4917 87.0208C75.1732 87.5977 73.7522 87.9036 72.3128 87.9206L71.4091 87.9613L81.9367 77.9259ZM64.5165 83.8402L64.3275 83.3617C63.0463 80.1457 64.3209 76.1453 67.578 73.178C70.2894 70.7029 72.6495 70.3859 75.7317 72.0721L76.1255 72.2873L64.5165 83.8402ZM150.01 20.2261C149.146 21.0491 148.304 21.8446 147.481 22.661C146.969 23.1862 146.487 23.7399 146.037 24.3195C145.005 25.6079 143.932 26.9364 142.563 27.3006C140.244 27.9215 137.788 27.9413 135.192 27.9616C134.086 27.9682 132.939 27.9754 131.779 28.0273L131.354 28.0477L131.428 27.636C131.617 26.5859 131.799 25.5654 131.967 24.5678C132.42 21.9641 132.844 19.5092 133.418 17.0854C133.633 16.175 134.625 15.4328 135.42 14.8329L135.562 14.7246C137.296 13.4165 139.041 12.1688 140.89 10.847C141.612 10.3281 142.345 9.79964 143.089 9.26191L143.244 9.1542L143.413 9.22843C144.883 9.81914 145.611 11.0491 146.32 12.2364C146.611 12.7588 146.94 13.2592 147.304 13.7335C148.181 14.8126 149.044 15.9053 149.955 17.065L151.405 18.8931L150.01 20.2261Z"
					fill="currentColor"
				/>
			</g>
			<defs>
				<clipPath id="clip0_8_2888">
					<rect
						width="160.803"
						height="150.958"
						fill="white"
						transform="translate(0.361084 0.143066)"
					/>
				</clipPath>
			</defs>
		</svg>
	);
}
